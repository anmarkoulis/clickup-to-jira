name: CI

on:
  push:
    branches:
      - 'feat/**'
      - 'ci/**'
      - 'issue/**'
      - 'master'
      - 'develop'
      - 'hotfix/**'
      - 'bug/**'
      - 'fix/**'
      - 'refactor/**'
      - 'build/**'
      - 'test/**'
      - 'dependabot/**'
    tags:
      - '*'

jobs:
  precommit:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4.6.0
        with:
          python-version: 3.8
          architecture: x64
      - name: Checkout Repository
        uses: actions/checkout@main
      - name: Run precommit
        run: make pre-commit args=--all-files

  unittest:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4.6.0
        with:
          python-version: 3.8
          architecture: x64
      - name: Checkout Repository
        uses: actions/checkout@main
      - name: Run tests with coverage
        run: make test-with-coverage-report

  documentation:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4.6.0
        with:
          python-version: 3.8
          architecture: x64
      - name: Checkout Repository
        uses: actions/checkout@main
      - name: Run sphinx build
        run: make build-sphinx
      - name: Upload documentation as artifact
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: docs/_build/html
      - name: Upload to read the docs
        if: startsWith(github.ref, 'refs/tags/v')
        run: curl -X POST -d "branches=master" -d "token=${{ secrets.RTDS_WEBHOOK_TOKEN }}"  ${{ secrets.RTDS_WEBHOOK_URL }}

  bump:
    if: "!startsWith(github.event.head_commit.message, 'bump:') && github.ref == 'refs/heads/master'"
    runs-on: ubuntu-latest
    needs:
      - unittest
      - precommit
      - documentation
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4.6.0
        with:
          python-version: 3.8
          architecture: x64
      - name: Checkout Repository
        uses: actions/checkout@main
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0
      - name: Install dependencies
        run: pip install -U commitizen
      - name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          branch: master

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs:
      - precommit
      - unittest
      - documentation
    steps:
      - name: Checkout Repository
        uses: actions/checkout@main
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4.6.0
        with:
          python-version: 3.8
          architecture: x64
      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash
      - name: Checkout Repository
        uses: actions/checkout@main
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0
      - name: Get notes
        id: generate_notes
        uses: ./.github/actions/release_notes_from_changelog
        with:
          tag_name: ${{ github.ref }}
          changelog: CHANGELOG.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          prerelease: false
          draft: false
          body: ${{join(fromJson(steps.generate_notes.outputs.notes).notes, '')}}

  upload:
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - unittest
      - precommit
      - documentation
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4.6.0
        with:
          python-version: 3.8
          architecture: x64
      - name: Checkout Repository
        uses: actions/checkout@main
      - name: Build package
        run: make build-package
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
